import Decimal from "decimal.js";
import { IAddress } from "../base";
import { Signature, SignatureWithPublicKey } from "../models";
import { IPrivateKey } from "../models/crypto/private_key";
export type Address = string | IAddress;
export type Amount = string | number | Decimal;
export declare function resolveAddress(address: Address): string;
export declare function resolveDecimal(amount: Amount): Decimal;
export type SignFn = (hashToSign: Uint8Array) => SignatureWithPublicKey.SignatureWithPublicKey;
export type NotarizeFn = (hashToSign: Uint8Array) => Signature.Signature;
export type SignatureSource = IPrivateKey | SignFn | SignatureWithPublicKey.SignatureWithPublicKey;
export type NotarySignatureSource = IPrivateKey | NotarizeFn | Signature.Signature;
export declare function resolveSignature(source: SignatureSource, hashToSign: Uint8Array): SignatureWithPublicKey.SignatureWithPublicKey;
export declare function resolveNotarySignature(source: NotarySignatureSource, hashToNotarize: Uint8Array): Signature.Signature;
