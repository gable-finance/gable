import { DecompileNotarizedTransactionIntentOutput, DecompileSignedTransactionIntentOutput, DecompileTransactionIntentOutput, InstructionList } from "../..";
export declare class DecompileUnknownTransactionIntentInput {
    instructionsOutputKind: InstructionList.Kind;
    compiledUnknownIntent: Uint8Array;
    constructor(instructionsOutputKind: InstructionList.Kind, compiledUnknownIntent: Uint8Array | string);
    toString(): string;
    toObject(): Record<string, any>;
}
export declare enum DecompileUnknownTransactionIntentOutputKind {
    TransactionIntent = "TransactionIntent",
    SignedTransactionIntent = "SignedTransactionIntent",
    NotarizedTransactionIntent = "NotarizedTransactionIntent"
}
export declare class DecompileUnknownTransactionIntentOutput {
    readonly type: DecompileUnknownTransactionIntentOutputKind;
    value: DecompileTransactionIntentOutput | DecompileSignedTransactionIntentOutput | DecompileNotarizedTransactionIntentOutput;
    constructor(value: DecompileTransactionIntentOutput | DecompileSignedTransactionIntentOutput | DecompileNotarizedTransactionIntentOutput);
    toString(): string;
    toObject(): Record<string, any>;
}
