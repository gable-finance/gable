import { ManifestSborValue, ScryptoSborValue } from "./index";
export declare class Value {
    readonly type: "ScryptoSbor" | "ManifestSbor";
    constructor(type: "ScryptoSbor" | "ManifestSbor");
}
export declare class ScryptoSbor extends Value {
    value: ScryptoSborValue.Value;
    constructor(value: ScryptoSborValue.Value);
    toString(): string;
    toObject(): Record<string, any>;
    toSborValue(): ScryptoSbor | ManifestSbor;
}
export declare class ManifestSbor extends Value {
    value: ManifestSborValue.Value;
    manifestString: string;
    constructor(value: ManifestSborValue.Value, manifestString: string);
    toString(): string;
    toObject(): Record<string, any>;
    toSborValue(): ScryptoSbor | ManifestSbor;
}
